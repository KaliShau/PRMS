<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BEioUbsAAAAASUVORK5CYII=
</value>
  </data>
</root>